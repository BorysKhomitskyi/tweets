{"version":3,"file":"static/js/492.cabaadea.chunk.js","mappings":"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","sources":["services/tweetsAPI.js","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","components/TweetCard/TweetCard.styled.jsx","components/TweetCard/TweetCard.jsx","services/storage.js","components/TweetCardsList/TweetCardsList.styled.jsx","components/TweetCardsList/TweetCardsList.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/TweetsPage/TweetsPage.styled.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://646504a6228bd07b353fdbd9.mockapi.io/users';\r\n\r\nexport async function fetchUsers(page = 1) {\r\n  const response = await axios.get(`${BASE_URL}?page=${page}&limit=3`);\r\n  return response.data;\r\n}\r\n\r\nexport async function updateFollowers(id, followers) {\r\n  const response = await axios.put(`${BASE_URL}/${id}`, followers);\r\n  return response.data;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  display: flex;\r\n  text-align: center;\r\n  max-width: 200px;\r\n  margin: 0 auto;\r\n  padding: 14px;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: calc(24 / 18);\r\n  text-decoration: none;\r\n  border-radius: 10px;\r\n  border: solid 1px #373737;\r\n  cursor: pointer;\r\n  color: #373737;\r\n  background-color: #EBD8FF;\r\n  );\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    color: #373737;\r\n    background-color: #5CD3A8;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { StyledLink } from \"./BackBtn.styled\";\r\n\r\nconst BackBtn = ({ to, children }) => {\r\n  return <StyledLink to={to}>{children}</StyledLink>;\r\n};\r\n\r\nBackBtn.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BackBtn;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Card = styled.div`\r\n  position: relative;\r\n  z-index: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-bottom: 36px;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  background-image: url('images/bgpicture.png'), url('images/logo.png');\r\n  background-position: top 28px right 36px, top 20px left 20px;\r\n  background-repeat: no-repeat, no-repeat;\r\n  color: #ebd8ff;\r\n  &::after {\r\n    position: absolute;\r\n    content: '';\r\n    z-index: 0;\r\n    top: 50%;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 10px;\r\n    transform: translateY(-50%);\r\n    background-color: #ebd8ff;\r\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n      inset 0px -1.71846px 3.43693px #ae7be3,\r\n      inset 0px 3.43693px 2.5777px #fbf8ff;\r\n  }\r\n`;\r\n\r\nexport const AvatarBox = styled.div`\r\n  z-index: 1;\r\n  display: flex;\r\n  margin-top: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background-color: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  background-color: #5736a3;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 16px;\r\n  padding-bottom: 26px;\r\n`;\r\n\r\nexport const TweetsNumber = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: calc(24 / 20);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const FollowersNumber = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: calc(24 / 20);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  position: relative;\r\n  padding: 14px;\r\n  width: 196px;\r\n  height: 50px;\r\n  color: #373737;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: calc(22 / 18);\r\n  text-transform: uppercase;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  background-color: ${({ isFollowing }) =>\r\n    isFollowing ? '#5CD3A8' : '#EBD8FF'};\r\n  &:hover {\r\n    background-color: ${({ isFollowing }) =>\r\n      isFollowing ? '#EBD8FF' : '#5CD3A8'};\r\n  }\r\n`;\r\n\r\nexport const ButtonText = styled.span`\r\n  display: inline-block;\r\n  width: 100%;\r\n  text-align: center;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { loadFromStorage } from \"../../services/storage\";\r\nimport {\r\n  Avatar,\r\n  AvatarBox,\r\n  Button,\r\n  ButtonText,\r\n  Card,\r\n  FollowersNumber,\r\n  TweetsNumber,\r\n  UserInfo,\r\n} from \"./TweetCard.styled\";\r\n\r\nconst TweetCard = ({ id, avatar, tweets, followers, onFollowClick }) => {\r\n  const ifFollowing = loadFromStorage(`tweet_${id}`) === true;\r\n\r\n  const handleFollowClick = () => {\r\n    onFollowClick(id, ifFollowing);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <AvatarBox>\r\n        <Avatar width={62} height={62} src={avatar} alt=\"user avatar\" />\r\n      </AvatarBox>\r\n      <UserInfo>\r\n        <TweetsNumber>{tweets.toLocaleString(\"en-US\")} Tweets</TweetsNumber>\r\n        <FollowersNumber>\r\n          {followers.toLocaleString(\"en-US\")} Followers\r\n        </FollowersNumber>\r\n      </UserInfo>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={handleFollowClick}\r\n        isFollowing={ifFollowing}\r\n      >\r\n        <ButtonText isFollowing={ifFollowing}>\r\n          {ifFollowing ? \"Following\" : \"Follow\"}\r\n        </ButtonText>\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTweetCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  tweets: PropTypes.number.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  onFollowClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TweetCard;\r\n","export const saveToStorage = (key, value) => {\r\n  try {\r\n    const defaultValue = JSON.stringify(value);\r\n    localStorage.setItem(key, defaultValue);\r\n  } catch (error) {\r\n    console.error('Error', error.message);\r\n  }\r\n};\r\n\r\nexport const loadFromStorage = key => {\r\n  try {\r\n    const defaultValue = localStorage.getItem(key);\r\n    return defaultValue === null ? undefined : JSON.parse(defaultValue);\r\n  } catch (error) {\r\n    console.error('Error: ', error.message);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 20px;\r\n  width: 1280px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 48px;\r\n  padding: 0 0 20px 0;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  width: 380px;\r\n  height: 460px;\r\n  border-radius: 20px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport TweetCard from \"../TweetCard/TweetCard\";\r\nimport { Item, List, Wrapper } from \"./TweetCardsList.styled\";\r\n\r\nconst TweetsCardList = ({ users, onFollowClick }) => {\r\n  return (\r\n    <Wrapper>\r\n      <List>\r\n        {users.map(({ id, tweets, followers, avatar }) => (\r\n          <Item key={id}>\r\n            <TweetCard\r\n              id={id}\r\n              tweets={tweets}\r\n              followers={followers}\r\n              avatar={avatar}\r\n              onFollowClick={onFollowClick}\r\n            />\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nTweetsCardList.propTypes = {\r\n  users: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n  onFollowClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TweetsCardList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  text-align: center;\r\n  max-width: 200px;\r\n  margin: 0 auto;\r\n  padding: 14px;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: calc(24 / 18);\r\n  text-decoration: none;\r\n  border-radius: 10px;\r\n  border: solid 1px #373737;\r\n  cursor: pointer;\r\n  color: #373737;\r\n  background-color: #EBD8FF;\r\n  );\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    color: #373737;\r\n    background-color: #5CD3A8;\r\n  }\r\n`;\r\n","import { Button } from \"./LoadMoreBtn.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonLoadMore = ({ onBtnLoadMore }) => {\r\n  return (\r\n    <Button type=\"button\" onClick={onBtnLoadMore}>\r\n      Load More\r\n    </Button>\r\n  );\r\n};\r\n\r\nButtonLoadMore.propTypes = {\r\n  onBtnLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonLoadMore;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderBox = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 113%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n","import { ThreeCircles} from \"react-loader-spinner\";\r\nimport { LoaderBox } from \"./Loader.styled\";\r\n\r\nconst Loader = (page) => {\r\n  if (page) {\r\n    return (\r\n      <LoaderBox>\r\n        <ThreeCircles width=\"300\" color=\"#5CD3A8\" />\r\n      </LoaderBox>\r\n    );\r\n  }\r\n  return <ThreeCircles width=\"300\" color=\"#5CD3A8\" />;\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  flex-direction: column;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NoSubscriptions = styled.p`\r\n  font-size: 50px;\r\n  margin-top: 220px;\r\n  margin-bottom: 220px;\r\n  font-weight: 900;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { saveToStorage } from '../../services/storage';\r\nimport { fetchUsers, updateFollowers } from '../../services/tweetsAPI';\r\nimport BackBtn from '../../components/BackBtn/BackBtn';\r\nimport TweetCardsList from '../../components/TweetCardsList/TweetCardsList';\r\nimport LoadMoreBtn from '../../components/LoadMoreBtn/LoadMoreBtn';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { Section, } from './TweetsPage.styled';\r\n\r\nconst TweetsPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoadMore, setIsLoadMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setIsLoadMore(false);\r\n\r\n    fetchUsers(page)\r\n      .then(newUsers => {\r\n        setUsers(prevUsers => [...prevUsers, ...newUsers]);\r\n        setIsLoading(false);\r\n        setIsLoadMore(true);\r\n      })\r\n      .catch(console.log);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (users.length === 12 && page !== 1) {\r\n      setIsLoadMore(false);\r\n    }\r\n  }, [page, users.length]);\r\n\r\n  const handleFollowClick = (userId, isFollowing) => {\r\n    const updatedUsers = users.map(user => {\r\n      if (user.id === userId) {\r\n        const updatedUser = {\r\n          ...user,\r\n          followers: user.followers + (isFollowing ? -1 : 1),\r\n        };\r\n        updateFollowers(user.id, { followers: updatedUser.followers });\r\n        return updatedUser;\r\n      }\r\n      return user;\r\n    });\r\n    setUsers(updatedUsers);\r\n    saveToStorage(`tweet_${userId}`, isFollowing ? false : true);\r\n  };\r\n\r\n  const onButtonLoadMore = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Section>\r\n      <BackBtn to=\"/\">Back</BackBtn>\r\n      <TweetCardsList users={users} onFollowClick={handleFollowClick} />\r\n      {isLoading && Loader(page)}\r\n      {isLoadMore && (\r\n        <LoadMoreBtn onBtnLoadMore={onButtonLoadMore} disabled={isLoading} />\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["BASE_URL","_fetchUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","arguments","wrap","_context","prev","next","length","undefined","axios","concat","sent","abrupt","data","stop","apply","_updateFollowers","_callee2","id","followers","_context2","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","Card","AvatarBox","_templateObject2","Avatar","_templateObject3","UserInfo","_templateObject4","TweetsNumber","_templateObject5","FollowersNumber","_templateObject6","Button","_templateObject7","isFollowing","_ref2","ButtonText","_templateObject8","avatar","tweets","onFollowClick","ifFollowing","key","defaultValue","localStorage","getItem","JSON","parse","error","console","message","loadFromStorage","_jsxs","width","height","src","alt","toLocaleString","type","onClick","Wrapper","List","Item","users","map","TweetCard","onBtnLoadMore","LoaderBox","ThreeCircles","color","Section","_useState","useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setPage","_useState7","_useState8","isLoadMore","setIsLoadMore","useEffect","fetchUsers","then","newUsers","prevUsers","_toConsumableArray","catch","log","Loader","BackBtn","TweetCardsList","userId","updatedUsers","user","updatedUser","_objectSpread","_x","_x2","updateFollowers","value","stringify","setItem","saveToStorage","LoadMoreBtn","prevPage","disabled"],"sourceRoot":""}